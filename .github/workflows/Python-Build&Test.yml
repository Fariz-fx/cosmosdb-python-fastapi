name: Build Python application and Check Vulnerabilities

on:
  #push:
    #branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    working-directory: api

#env:
  #AZURE_WEBAPP_NAME: devopsoh05189poi  # set this to the name of your Azure Web App
  #RESOURCE_GROUP: Fenesys-Test
  #SLOT_NAME: staging
  #ACR_IMAGES: testfenesys.azurecr.io/devopsoh/api-poi
  #ACR_REGISTRY: TestFenesys
  #POI_STAGING_URL: https://devopsoh05189poi-staging.azurewebsites.net/api/version/poi

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      COSMOS_URI: ${{ secrets.COSMOS_URI }}
      COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
    steps:
    # Performing Checkout
    - name: Git Checkout
      uses: actions/checkout@v3
    # Setting Python version
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        #pip install fastapi
        #pip install fastapi uvicorn
        #pip install python-dotenv
        #pip install aiohttp
        #pip install azure-cosmos
        #pip install flake8 pytest
        #pip install -r requirements.txt
        #pip install pytest
        #pip install pytest-cov
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
      
    - name: Install tox and any other packages
      run: pip install tox
      
    - name: Run Tox for testing
      run: tox -e py
